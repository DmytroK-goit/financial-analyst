import { useSelector } from "react-redux";
import { selectYearTransactions } from "../../redux/Finance/selectors";
import s from "./Forecast.module.scss";
export const Forecast = () => {
  const yearData = useSelector(selectYearTransactions);
  const monthlyData = yearData.monthly;
  const monthNamesUa = [
    "—Å—ñ—á–µ–Ω—å",
    "–ª—é—Ç–∏–π",
    "–±–µ—Ä–µ–∑–µ–Ω—å",
    "–∫–≤—ñ—Ç–µ–Ω—å",
    "—Ç—Ä–∞–≤–µ–Ω—å",
    "—á–µ—Ä–≤–µ–Ω—å",
    "–ª–∏–ø–µ–Ω—å",
    "—Å–µ—Ä–ø–µ–Ω—å",
    "–≤–µ—Ä–µ—Å–µ–Ω—å",
    "–∂–æ–≤—Ç–µ–Ω—å",
    "–ª–∏—Å—Ç–æ–ø–∞–¥",
    "–≥—Ä—É–¥–µ–Ω—å",
  ];
  const forecastMonthIndex = (new Date().getMonth() + 1) % 12;
  const forecastMonthName = monthNamesUa[forecastMonthIndex];
  const filledMonths = monthlyData.filter(
    (item) => item.income > 0 || item.expense > 0
  );
  const lastNMonths = filledMonths.slice(-4);

  const avg = lastNMonths.reduce(
    (acc, item) => {
      acc.income += item.income;
      acc.expense += item.expense;
      acc.netTotal += item.netTotal;
      return acc;
    },
    { income: 0, expense: 0, netTotal: 0 }
  );
  const count = lastNMonths.length;
  const forecast = count
    ? {
        income: Math.round(avg.income / count),
        expense: Math.round(avg.expense / count),
        netTotal: Math.round(avg.netTotal / count),
      }
    : { income: 0, expense: 0, netTotal: 0 };

  return (
    <div
      className={s.forecast}
      title="–ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —è–∫ —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ—Ö–æ–¥—ñ–≤ —ñ –≤–∏—Ç—Ä–∞—Ç –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 3 –º—ñ—Å—è—Ü—ñ"
    >
      <h2 className={s.forecastTitle}>
        –ü—Ä–æ–≥–Ω–æ–∑ –¥–æ—Ö–æ–¥—ñ–≤ —Ç–∞ –≤–∏—Ç—Ä–∞—Ç –Ω–∞ {forecastMonthName.toLocaleUpperCase()}{" "}
        {new Date().getFullYear()}
      </h2>
      <p className={s.forecastText}>
        üí∞ –ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏–π –¥–æ—Ö—ñ–¥: <strong>{forecast.income} –≥—Ä–Ω</strong>
      </p>
      <p className={s.forecastText}>
        üí∏ –ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏: <strong>{forecast.expense} –≥—Ä–Ω</strong>
      </p>
      <p className={s.forecastText}>
        üìà –ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏–π —á–∏—Å—Ç–∏–π –¥–æ—Ö—ñ–¥: <strong>{forecast.netTotal} –≥—Ä–Ω</strong>
      </p>
    </div>
  );
};
